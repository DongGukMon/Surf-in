{"ast":null,"code":"import _regeneratorRuntime from\"@babel/runtime/regenerator\";import*as Google from'expo-google-app-auth';import*as SecureStore from'expo-secure-store';import firebase from'firebase/app';import{firstSignUp,alreadySignup}from\"./firebaseCall\";import notification from\"./notification\";var handleGoogleSignin=function handleGoogleSignin(){var config;return _regeneratorRuntime.async(function handleGoogleSignin$(_context){while(1){switch(_context.prev=_context.next){case 0:config={expoClientId:\"61530148512-k3kf2goaklr8r1k18csko0uk295n4i19.apps.googleusercontent.com\",iosClientId:\"61530148512-vv55cqn7ga0gkkcn0dlfeuv535qofgui.apps.googleusercontent.com\",androidClientId:\"61530148512-h8b2lmf0iesre05g89cnpv58ofv26ur0.apps.googleusercontent.com\",scopes:['profile','email']};Google.logInAsync(config).then(function(result){if(result.type=='success'){var credential=firebase.auth.GoogleAuthProvider.credential(result.idToken,result.accessToken);}firebase.auth().signInWithCredential(credential).then(function(result){notification(result);if(result.additionalUserInfo.isNewUser){firstSignUp(result);}else{alreadySignup(result);}});}).catch(function(error){console.log(error);});case 2:case\"end\":return _context.stop();}}},null,null,null,Promise);};export default handleGoogleSignin;","map":{"version":3,"sources":["C:/Users/Note/Desktop/surfin/src/handleGoogleSignin.js"],"names":["Google","SecureStore","firebase","firstSignUp","alreadySignup","notification","handleGoogleSignin","config","expoClientId","iosClientId","androidClientId","scopes","logInAsync","then","result","type","credential","auth","GoogleAuthProvider","idToken","accessToken","signInWithCredential","additionalUserInfo","isNewUser","catch","error","console","log"],"mappings":"4DAAA,MAAO,GAAKA,CAAAA,MAAZ,KAAwB,sBAAxB,CACA,MAAO,GAAKC,CAAAA,WAAZ,KAA6B,mBAA7B,CACA,MAAOC,CAAAA,QAAP,KAAqB,cAArB,CACA,OAAQC,WAAR,CAAoBC,aAApB,sBACA,MAAOC,CAAAA,YAAP,sBAEA,GAAMC,CAAAA,kBAAkB,CAAG,QAArBA,CAAAA,kBAAqB,0IAEjBC,MAFiB,CAER,CACbC,YAAY,0EADC,CAEbC,WAAW,0EAFE,CAGbC,eAAe,0EAHF,CAIbC,MAAM,CAAE,CAAC,SAAD,CAAY,OAAZ,CAJK,CAFQ,CASvBX,MAAM,CAACY,UAAP,CAAkBL,MAAlB,EACGM,IADH,CACQ,SAACC,MAAD,CAAY,CAChB,GAAIA,MAAM,CAACC,IAAP,EAAe,SAAnB,CAA8B,CAC5B,GAAIC,CAAAA,UAAU,CAAGd,QAAQ,CAACe,IAAT,CAAcC,kBAAd,CAAiCF,UAAjC,CACfF,MAAM,CAACK,OADQ,CAEfL,MAAM,CAACM,WAFQ,CAAjB,CAID,CACDlB,QAAQ,CAACe,IAAT,GAAgBI,oBAAhB,CAAqCL,UAArC,EAAiDH,IAAjD,CAAsD,SAACC,MAAD,CAAU,CAC9DT,YAAY,CAACS,MAAD,CAAZ,CACA,GAAIA,MAAM,CAACQ,kBAAP,CAA0BC,SAA9B,CAAyC,CACvCpB,WAAW,CAACW,MAAD,CAAX,CACD,CAFD,IAEO,CACLV,aAAa,CAACU,MAAD,CAAb,CACC,CACJ,CAPD,EAQD,CAhBH,EAiBGU,KAjBH,CAiBS,SAACC,KAAD,CAAW,CAChBC,OAAO,CAACC,GAAR,CAAYF,KAAZ,EACD,CAnBH,EATuB,qEAA3B,CAgCE,cAAenB,CAAAA,kBAAf","sourcesContent":["import * as Google from 'expo-google-app-auth';\r\nimport * as SecureStore from 'expo-secure-store';\r\nimport firebase from 'firebase/app';\r\nimport {firstSignUp,alreadySignup} from './firebaseCall';\r\nimport notification from './notification';\r\n\r\nconst handleGoogleSignin = async () => {\r\n  \r\n    const config = {\r\n      expoClientId:`61530148512-k3kf2goaklr8r1k18csko0uk295n4i19.apps.googleusercontent.com`,\r\n      iosClientId: `61530148512-vv55cqn7ga0gkkcn0dlfeuv535qofgui.apps.googleusercontent.com`,\r\n      androidClientId: `61530148512-h8b2lmf0iesre05g89cnpv58ofv26ur0.apps.googleusercontent.com`,\r\n      scopes: ['profile', 'email'],\r\n    };\r\n\r\n    Google.logInAsync(config)\r\n      .then((result) => {\r\n        if (result.type == 'success') {\r\n          var credential = firebase.auth.GoogleAuthProvider.credential(\r\n            result.idToken,\r\n            result.accessToken\r\n          );\r\n        }\r\n        firebase.auth().signInWithCredential(credential).then((result)=>{\r\n          notification(result);\r\n          if (result.additionalUserInfo.isNewUser) {\r\n            firstSignUp(result)\r\n          } else {\r\n            alreadySignup(result)\r\n            }\r\n        })\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n      \r\n  };\r\n  \r\n  export default handleGoogleSignin"]},"metadata":{},"sourceType":"module"}