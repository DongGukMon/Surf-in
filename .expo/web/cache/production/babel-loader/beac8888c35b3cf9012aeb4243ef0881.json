{"ast":null,"code":"import _defineProperty from\"@babel/runtime/helpers/defineProperty\";import _slicedToArray from\"@babel/runtime/helpers/slicedToArray\";function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);if(enumerableOnly){symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable;});}keys.push.apply(keys,symbols);}return keys;}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=arguments[i]!=null?arguments[i]:{};if(i%2){ownKeys(Object(source),true).forEach(function(key){_defineProperty(target,key,source[key]);});}else if(Object.getOwnPropertyDescriptors){Object.defineProperties(target,Object.getOwnPropertyDescriptors(source));}else{ownKeys(Object(source)).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key));});}}return target;}import React,{useState,useEffect,useContext}from'react';import{NavigationContainer}from'@react-navigation/native';import Main from\"./navigators/Main\";import Signin from\"./screen/Signin\";import ActivityIndicator from\"react-native-web/dist/exports/ActivityIndicator\";import{LogBox}from\"react-native-web/dist/index\";import View from\"react-native-web/dist/exports/View\";import Text from\"react-native-web/dist/exports/Text\";import firebase from'firebase';import{UserInfoContext}from\"./src/UserInfoContext\";import{ToastProvider}from'react-native-toast-notifications';LogBox.ignoreLogs(['Warning: ...']);LogBox.ignoreAllLogs();export default function App(){var _useState=useState(\"Yet\"),_useState2=_slicedToArray(_useState,2),isLogin=_useState2[0],setIsLogin=_useState2[1];var _useState3=useState({uid:\"\",email:\"\",name:\"\",point:\"\"}),_useState4=_slicedToArray(_useState3,2),userInfo=_useState4[0],setUserInfo=_useState4[1];var checkIfLoggedIn=function checkIfLoggedIn(){firebase.auth().onAuthStateChanged(function(result){if(result){setUserInfo(_objectSpread(_objectSpread({},userInfo),{},{uid:result.uid,email:result.email,name:result.displayName}));}setIsLogin(result);});};useEffect(function(){checkIfLoggedIn();},[]);return isLogin==\"Yet\"?React.createElement(View,{style:{flex:1,justifyContent:'center',alignItems:'center'}},React.createElement(ActivityIndicator,null)):isLogin?React.createElement(UserInfoContext.Provider,{value:{userInfo:userInfo,setUserInfo:setUserInfo}},React.createElement(ToastProvider,null,React.createElement(NavigationContainer,null,React.createElement(Main,null)))):React.createElement(UserInfoContext.Provider,{value:{userInfo:userInfo,setUserInfo:setUserInfo}},React.createElement(Signin,null));}","map":{"version":3,"sources":["C:/Users/Note/Desktop/surfin/App.js"],"names":["React","useState","useEffect","useContext","NavigationContainer","Main","Signin","LogBox","firebase","UserInfoContext","ToastProvider","ignoreLogs","ignoreAllLogs","App","isLogin","setIsLogin","uid","email","name","point","userInfo","setUserInfo","checkIfLoggedIn","auth","onAuthStateChanged","result","displayName","flex","justifyContent","alignItems"],"mappings":"k6BAAA,MAAOA,CAAAA,KAAP,EAAcC,QAAd,CAAwBC,SAAxB,CAAmCC,UAAnC,KAAoD,OAApD,CACA,OAASC,mBAAT,KAAoC,0BAApC,CACA,MAAOC,CAAAA,IAAP,yBACA,MAAOC,CAAAA,MAAP,uB,sFAC4BC,M,6IAC5B,MAAOC,CAAAA,QAAP,KAAqB,UAArB,CACA,OAAQC,eAAR,6BACA,OAASC,aAAT,KAA8B,kCAA9B,CAEAH,MAAM,CAACI,UAAP,CAAkB,CAAC,cAAD,CAAlB,EACAJ,MAAM,CAACK,aAAP,GAEA,cAAe,SAASC,CAAAA,GAAT,EAAe,CAE5B,cAA8BZ,QAAQ,CAAC,KAAD,CAAtC,wCAAOa,OAAP,eAAgBC,UAAhB,eACA,eAAgCd,QAAQ,CAAC,CAACe,GAAG,CAAE,EAAN,CAASC,KAAK,CAAC,EAAf,CAAkBC,IAAI,CAAE,EAAxB,CAA2BC,KAAK,CAAE,EAAlC,CAAD,CAAxC,yCAAOC,QAAP,eAAiBC,WAAjB,eAEA,GAAMC,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,EAAM,CAC5Bd,QAAQ,CAACe,IAAT,GAAgBC,kBAAhB,CACE,SAASC,MAAT,CAAiB,CACb,GAAGA,MAAH,CAAW,CACXJ,WAAW,gCAAKD,QAAL,MAAcJ,GAAG,CAACS,MAAM,CAACT,GAAzB,CAA8BC,KAAK,CAACQ,MAAM,CAACR,KAA3C,CAAkDC,IAAI,CAAEO,MAAM,CAACC,WAA/D,GAAX,CACC,CACDX,UAAU,CAACU,MAAD,CAAV,CACD,CANL,EAQD,CATD,CAWAvB,SAAS,CAAC,UAAM,CACdoB,eAAe,GAChB,CAFQ,CAEP,EAFO,CAAT,CAMA,MACER,CAAAA,OAAO,EAAI,KAAX,CACG,oBAAC,IAAD,EAAM,KAAK,CAAE,CAAEa,IAAI,CAAE,CAAR,CAAWC,cAAc,CAAE,QAA3B,CAAqCC,UAAU,CAAE,QAAjD,CAAb,EAA0E,oBAAC,iBAAD,MAA1E,CADH,CAECf,OAAO,CACN,oBAAC,eAAD,CAAiB,QAAjB,EAA0B,KAAK,CAAE,CAACM,QAAQ,CAARA,QAAD,CAAUC,WAAW,CAAXA,WAAV,CAAjC,EACE,oBAAC,aAAD,MACA,oBAAC,mBAAD,MACE,oBAAC,IAAD,MADF,CADA,CADF,CADM,CASN,oBAAC,eAAD,CAAiB,QAAjB,EAA0B,KAAK,CAAE,CAACD,QAAQ,CAARA,QAAD,CAAUC,WAAW,CAAXA,WAAV,CAAjC,EACE,oBAAC,MAAD,MADF,CAZJ,CAiBD","sourcesContent":["import React,{useState, useEffect, useContext} from 'react';\r\nimport { NavigationContainer } from '@react-navigation/native';\r\nimport Main from './navigators/Main';\r\nimport Signin from './screen/Signin';\r\nimport { ActivityIndicator, LogBox, View,Text } from 'react-native';\r\nimport firebase from 'firebase';\r\nimport {UserInfoContext} from './src/UserInfoContext'; \r\nimport { ToastProvider } from 'react-native-toast-notifications'\r\n\r\nLogBox.ignoreLogs(['Warning: ...']);\r\nLogBox.ignoreAllLogs();\r\n\r\nexport default function App() {\r\n\r\n  const [isLogin, setIsLogin] = useState(\"Yet\");\r\n  const [userInfo, setUserInfo] = useState({uid: \"\",email:\"\",name: \"\",point: \"\"});\r\n\r\n  const checkIfLoggedIn = () => {\r\n    firebase.auth().onAuthStateChanged(\r\n      function(result) {\r\n          if(result) {\r\n          setUserInfo({...userInfo,uid:result.uid, email:result.email, name: result.displayName})\r\n          }\r\n          setIsLogin(result)\r\n        }\r\n    )\r\n  };\r\n\r\n  useEffect(() => {\r\n    checkIfLoggedIn()\r\n  },[])\r\n\r\n  \r\n\r\n  return (\r\n    isLogin == \"Yet\" ?\r\n      (<View style={{ flex: 1, justifyContent: 'center', alignItems: 'center' }}><ActivityIndicator/></View>) :\r\n    (isLogin ?(\r\n      <UserInfoContext.Provider value={{userInfo,setUserInfo}}>\r\n        <ToastProvider>\r\n        <NavigationContainer>\r\n          <Main/>\r\n        </NavigationContainer>\r\n        </ToastProvider>\r\n      </UserInfoContext.Provider>\r\n    ) : \r\n      <UserInfoContext.Provider value={{userInfo,setUserInfo}}>\r\n        <Signin/>\r\n      </UserInfoContext.Provider>\r\n    )\r\n  )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}