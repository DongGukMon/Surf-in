{"ast":null,"code":"import _slicedToArray from\"@babel/runtime/helpers/slicedToArray\";import _regeneratorRuntime from\"@babel/runtime/regenerator\";import React,{useState,useEffect,useContext}from'react';import Button from\"react-native-web/dist/exports/Button\";import Text from\"react-native-web/dist/exports/Text\";import View from\"react-native-web/dist/exports/View\";import Modal from\"react-native-web/dist/exports/Modal\";import ActivityIndicator from\"react-native-web/dist/exports/ActivityIndicator\";import LottieView from'lottie-react-native';import*as Location from'expo-location';import firebase from'firebase';import firebaseInit from\"../src/firebaseInit.js\";import{UserInfoContext}from\"../src/UserInfoContext\";import{getPreciseDistance,isPointWithinRadius}from'geolib';import{pushNearFriends}from\"../src/notification\";firebaseInit();function HomeScreen(){var _useContext=useContext(UserInfoContext),userInfo=_useContext.userInfo;var uid=userInfo.uid;var _useState=useState(false),_useState2=_slicedToArray(_useState,2),modalVisible=_useState2[0],setModalVisible=_useState2[1];var _useState3=useState(),_useState4=_slicedToArray(_useState3,2),nearFriendsList=_useState4[0],setNearFriendsList=_useState4[1];function alertLocation(){var nearFriends=[];var checkArr=[];firebase.database().ref('location').once('value',function(snapshot){var total=Object.values(snapshot.val()).length;var lati=snapshot.val()[uid][\"latitude\"];var longi=snapshot.val()[uid][\"longitude\"];Object.values(snapshot.val()).map(function(current){var radiusLocation=isPointWithinRadius({latitude:lati,longitude:longi},{latitude:current[\"latitude\"],longitude:current[\"longitude\"]},10000);if(radiusLocation&&JSON.stringify(uid)!==JSON.stringify(current[\"uid\"])){var pdis=getPreciseDistance({latitude:lati,longitude:longi},{latitude:current[\"latitude\"],longitude:current[\"longitude\"]});firebase.database().ref('users/'+current[\"uid\"]).once('value',function(snapshot){nearFriends.push({name:snapshot.val()[\"name\"],uid:snapshot.val()[\"uid\"],distance:pdis});checkArr.push(true);if(checkArr.length==total){setNearFriendsList(nearFriends);setModalVisible(true);}});}else{checkArr.push(true);if(checkArr.length==total){setNearFriendsList(nearFriends);setModalVisible(true);}}});});}useEffect(function(){(function _callee(){var _await$Location$reque,status,positionTracking;return _regeneratorRuntime.async(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return _regeneratorRuntime.awrap(Location.requestForegroundPermissionsAsync());case 2:_await$Location$reque=_context.sent;status=_await$Location$reque.status;if(!(status=='granted')){_context.next=8;break;}(function(){return Location.requestBackgroundPermissionsAsync();});_context.next=10;break;case 8:setErrorMsg('Permission to access location was denied');return _context.abrupt(\"return\");case 10:_context.next=12;return _regeneratorRuntime.awrap(Location.watchPositionAsync({accuracy:Location.Accuracy.High,timeInterval:3000,distanceInterval:1},function(location){firebase.database().ref('location/'+uid).set({latitude:location['coords']['latitude'],longitude:location['coords']['longitude'],uid:uid});}));case 12:positionTracking=_context.sent;case 13:case\"end\":return _context.stop();}}},null,null,null,Promise);})();},[]);return React.createElement(View,{style:{flex:1,justifyContent:'center',alignItems:'center'}},React.createElement(Modal,{transparent:true,visible:modalVisible,onRequestClose:function onRequestClose(){Alert.alert('Modal has been closed.');}},React.createElement(View,{style:{flex:1,alignContent:'center',justifyContent:'center'}},React.createElement(View,{style:{margin:20,backgroundColor:'white',borderRadius:20,padding:35,alignItems:'center',shadowColor:'#000',shadowOffset:{width:0,height:2}}},React.createElement(Text,null,nearFriendsList?nearFriendsList.map(function(user){return\"user: \"+user[\"name\"]+\" distance: \"+user[\"distance\"]+\"m\\n\";}):React.createElement(ActivityIndicator,null)),React.createElement(Button,{title:\"Push\",onPress:function onPress(){pushNearFriends(nearFriendsList);setModalVisible(false);}}),React.createElement(Button,{title:\"\\uB2EB\\uAE30\",onPress:function onPress(){return setModalVisible(false);}})))),React.createElement(LottieView,{source:require(\"../assets/animation/66818-holographic-radar.json\"),autoPlay:true,loop:true}),React.createElement(Button,{title:\"Location\",onPress:function onPress(){alertLocation();}}));}export default HomeScreen;","map":{"version":3,"sources":["C:/Users/Note/Desktop/surfin/screen/HomeScreen.js"],"names":["React","useState","useEffect","useContext","LottieView","Location","firebase","firebaseInit","UserInfoContext","getPreciseDistance","isPointWithinRadius","pushNearFriends","HomeScreen","userInfo","uid","modalVisible","setModalVisible","nearFriendsList","setNearFriendsList","alertLocation","nearFriends","checkArr","database","ref","once","snapshot","total","Object","values","val","length","lati","longi","map","current","radiusLocation","latitude","longitude","JSON","stringify","pdis","push","name","distance","requestForegroundPermissionsAsync","status","requestBackgroundPermissionsAsync","setErrorMsg","watchPositionAsync","accuracy","Accuracy","High","timeInterval","distanceInterval","location","set","positionTracking","flex","justifyContent","alignItems","Alert","alert","alignContent","margin","backgroundColor","borderRadius","padding","shadowColor","shadowOffset","width","height","user","require"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useContext } from 'react';\r\nimport { Button, Text, View, Modal, ActivityIndicator } from 'react-native';\r\nimport LottieView from 'lottie-react-native';\r\nimport * as Location from 'expo-location';\r\nimport firebase from 'firebase';\r\nimport firebaseInit from '../src/firebaseInit.js';\r\nimport {UserInfoContext} from '../src/UserInfoContext';\r\nimport {getPreciseDistance, isPointWithinRadius} from 'geolib';\r\nimport {pushNearFriends} from '../src/notification';\r\n\r\nfirebaseInit()\r\n\r\nfunction HomeScreen() {\r\n\r\n  const {userInfo} = useContext(UserInfoContext);\r\n  const {uid} = userInfo\r\n\r\n  const [modalVisible,setModalVisible] = useState(false);\r\n  const [nearFriendsList, setNearFriendsList] = useState();\r\n\r\n  function alertLocation () {\r\n\r\n    var nearFriends=[];\r\n    var checkArr=[];\r\n    \r\n  \r\n    firebase.database().ref('location').once('value', (snapshot) => {\r\n   \r\n      const total = Object.values(snapshot.val()).length\r\n\r\n      var lati =snapshot.val()[uid][\"latitude\"]\r\n      var longi =snapshot.val()[uid][\"longitude\"]\r\n      \r\n      Object.values(snapshot.val()).map((current)=>{\r\n      \r\n      var radiusLocation = isPointWithinRadius(\r\n          { latitude: lati, longitude: longi },\r\n          { latitude: current[\"latitude\"], longitude: current[\"longitude\"] },\r\n          10000\r\n        );\r\n  \r\n  \r\n        if(radiusLocation && (JSON.stringify(uid) !== JSON.stringify(current[\"uid\"]))){\r\n  \r\n          var pdis = getPreciseDistance(\r\n            {latitude: lati, longitude: longi},\r\n            {latitude: current[\"latitude\"], longitude: current[\"longitude\"]},\r\n          );\r\n          \r\n          firebase.database().ref('users/'+current[\"uid\"]).once('value', (snapshot) => {\r\n  \r\n            nearFriends.push({\r\n              name:snapshot.val()[\"name\"],\r\n              uid:snapshot.val()[\"uid\"],\r\n              distance: pdis\r\n            })\r\n            checkArr.push(true)\r\n            if (checkArr.length == total) {\r\n              setNearFriendsList(nearFriends)\r\n              setModalVisible(true)\r\n            }\r\n            \r\n          })\r\n        } else {\r\n          checkArr.push(true)\r\n          if (checkArr.length == total) {\r\n            setNearFriendsList(nearFriends)\r\n            setModalVisible(true)\r\n          }\r\n  \r\n        }\r\n      })\r\n    })\r\n  }\r\n\r\n  useEffect(() => {\r\n    (async () => {\r\n      let { status } = await Location.requestForegroundPermissionsAsync();\r\n      if (status == 'granted'){\r\n        ()=> Location.requestBackgroundPermissionsAsync()\r\n      }else {\r\n        setErrorMsg('Permission to access location was denied');\r\n        return;\r\n      }\r\n\r\n    \r\n    const positionTracking = await Location.watchPositionAsync({accuracy: Location.Accuracy.High, timeInterval: 3000, distanceInterval: 1},(location)=>{\r\n      firebase\r\n      .database()\r\n      .ref('location/'+uid)\r\n      .set({\r\n        latitude:location['coords']['latitude'],\r\n        longitude:location['coords']['longitude'],\r\n        uid:uid\r\n      });\r\n    });\r\n    })();\r\n  },[]);\r\n\r\n  return (\r\n    <View style={{ flex: 1, justifyContent: 'center', alignItems: 'center' }}>\r\n      \r\n      <Modal\r\n        transparent={true}\r\n        visible={modalVisible}\r\n        onRequestClose={() => {\r\n          Alert.alert('Modal has been closed.');\r\n        }}>\r\n        <View style={{flex:1, alignContent:'center', justifyContent:'center'}}>\r\n          <View style={{margin: 20, backgroundColor: 'white', borderRadius: 20, padding: 35, alignItems: 'center', shadowColor: '#000',shadowOffset: {width: 0,height: 2,}}}>\r\n            <Text>\r\n              {nearFriendsList ? nearFriendsList.map((user)=>{\r\n              return `user: ${user[\"name\"]} distance: ${user[\"distance\"]}m\\n`}):<ActivityIndicator/>}\r\n            </Text>\r\n            <Button title=\"Push\" onPress={()=>{pushNearFriends(nearFriendsList); setModalVisible(false);}}></Button>\r\n            <Button title=\"닫기\" onPress={()=>setModalVisible(false)}></Button>\r\n          </View>\r\n        </View>\r\n      </Modal>\r\n\r\n      <LottieView source={require('../assets/animation/66818-holographic-radar.json')} autoPlay loop />\r\n      <Button title=\"Location\" onPress={()=>{alertLocation();}}/>      \r\n    </View>\r\n  );\r\n}\r\n\r\nexport default HomeScreen;"]},"metadata":{},"sourceType":"module"}