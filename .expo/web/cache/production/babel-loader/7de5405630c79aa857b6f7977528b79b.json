{"ast":null,"code":"import _slicedToArray from\"@babel/runtime/helpers/slicedToArray\";function _extends(){_extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key];}}}return target;};return _extends.apply(this,arguments);}import React,{useRef,useEffect,useState}from\"react\";import View from\"react-native-web/dist/exports/View\";import StyleSheet from\"react-native-web/dist/exports/StyleSheet\";import Animated from\"react-native-web/dist/exports/Animated\";import Text from\"react-native-web/dist/exports/Text\";import TouchableWithoutFeedback from\"react-native-web/dist/exports/TouchableWithoutFeedback\";import PanResponder from\"react-native-web/dist/exports/PanResponder\";import Dimensions from\"react-native-web/dist/exports/Dimensions\";var dims=Dimensions.get(\"window\");var Toast=function Toast(props){var id=props.id,onDestroy=props.onDestroy,icon=props.icon,_props$type=props.type,type=_props$type===void 0?\"normal\":_props$type,message=props.message,_props$duration=props.duration,duration=_props$duration===void 0?5000:_props$duration,style=props.style,textStyle=props.textStyle,_props$animationDurat=props.animationDuration,animationDuration=_props$animationDurat===void 0?250:_props$animationDurat,_props$animationType=props.animationType,animationType=_props$animationType===void 0?\"slide-in\":_props$animationType,successIcon=props.successIcon,dangerIcon=props.dangerIcon,warningIcon=props.warningIcon,successColor=props.successColor,dangerColor=props.dangerColor,warningColor=props.warningColor,normalColor=props.normalColor,placement=props.placement,_onPress=props.onPress;var containerRef=useRef(null);var _useState=useState(new Animated.Value(0)),_useState2=_slicedToArray(_useState,1),animation=_useState2[0];var panResponderRef=useRef();var panResponderAnimRef=useRef();var closeTimeoutRef=useRef(null);useEffect(function(){Animated.timing(animation,{toValue:1,useNativeDriver:true,duration:animationDuration}).start();if(duration!==0&&typeof duration===\"number\"){closeTimeoutRef.current=setTimeout(function(){handleClose();},duration);}return function(){closeTimeoutRef.current&&clearTimeout(closeTimeoutRef.current);};},[]);useEffect(function(){if(!props.open){closeTimeoutRef.current&&clearTimeout(closeTimeoutRef.current);handleClose();}},[props.open]);var handleClose=function handleClose(){Animated.timing(animation,{toValue:0,useNativeDriver:true,duration:animationDuration}).start(function(){return onDestroy();});};var panReleaseToLeft=function panReleaseToLeft(gestureState){Animated.timing(getPanResponderAnim(),{toValue:{x:-dims.width/10*9,y:gestureState.dy},useNativeDriver:true,duration:250}).start(function(){return onDestroy();});};var panReleaseToRight=function panReleaseToRight(gestureState){Animated.timing(getPanResponderAnim(),{toValue:{x:dims.width/10*9,y:gestureState.dy},useNativeDriver:true,duration:250}).start(function(){return onDestroy();});};var getPanResponder=function getPanResponder(){if(panResponderRef.current)return panResponderRef.current;panResponderRef.current=PanResponder.create({onMoveShouldSetPanResponder:function onMoveShouldSetPanResponder(_,gestureState){return!(gestureState.dx===0&&gestureState.dy===0);},onPanResponderMove:function onPanResponderMove(_,gestureState){var _getPanResponderAnim;(_getPanResponderAnim=getPanResponderAnim())===null||_getPanResponderAnim===void 0?void 0:_getPanResponderAnim.setValue({x:gestureState.dx,y:gestureState.dy});},onPanResponderRelease:function onPanResponderRelease(_,gestureState){if(gestureState.dx>50){panReleaseToRight(gestureState);}else if(gestureState.dx<-50){panReleaseToLeft(gestureState);}else{Animated.spring(getPanResponderAnim(),{toValue:{x:0,y:0},useNativeDriver:true}).start();}}});return panResponderRef.current;};var getPanResponderAnim=function getPanResponderAnim(){if(panResponderAnimRef.current)return panResponderAnimRef.current;panResponderAnimRef.current=new Animated.ValueXY({x:0,y:0});return panResponderAnimRef.current;};if(icon===undefined){switch(type){case\"success\":{if(successIcon){icon=successIcon;}break;}case\"danger\":{if(dangerIcon){icon=dangerIcon;}break;}case\"warning\":{if(warningIcon){icon=warningIcon;}break;}}}var backgroundColor=\"\";switch(type){case\"success\":backgroundColor=successColor||\"#00C851\";break;case\"danger\":backgroundColor=dangerColor||\"#ff4444\";break;case\"warning\":backgroundColor=warningColor||\"#ffbb33\";break;default:backgroundColor=normalColor||\"#333\";}var animationStyle={opacity:animation,transform:[{translateY:animation.interpolate({inputRange:[0,1],outputRange:placement===\"bottom\"?[20,0]:[-20,0]})},getPanResponderAnim().getTranslateTransform()[0]]};if(animationType===\"zoom-in\"){var _animationStyle$trans;(_animationStyle$trans=animationStyle.transform)===null||_animationStyle$trans===void 0?void 0:_animationStyle$trans.push({scale:animation.interpolate({inputRange:[0,1],outputRange:[0.7,1]})});}return React.createElement(Animated.View,_extends({ref:containerRef},getPanResponder().panHandlers,{style:[styles.container,animationStyle]}),props.renderType&&props.renderType[type]?props.renderType[type](props):props.renderToast?props.renderToast(props):React.createElement(TouchableWithoutFeedback,{disabled:!_onPress,onPress:function onPress(){return _onPress&&_onPress(id);}},React.createElement(View,{style:[styles.toastContainer,{backgroundColor:backgroundColor},style]},icon?React.createElement(View,{style:styles.iconContainer},icon):null,React.isValidElement(message)?message:React.createElement(Text,{style:[styles.message,textStyle]},message))));};var styles=StyleSheet.create({container:{width:\"100%\",alignItems:\"center\"},toastContainer:{paddingHorizontal:12,paddingVertical:12,borderRadius:5,marginVertical:5,flexDirection:\"row\",alignItems:\"center\",maxWidth:dims.width/10*9,overflow:\"hidden\"},message:{color:\"#fff\",fontWeight:\"500\"},iconContainer:{marginRight:5}});export default Toast;","map":{"version":3,"sources":["toast.tsx"],"names":["dims","Dimensions","Toast","props","type","duration","animationDuration","animationType","onPress","containerRef","useRef","useState","Animated","panResponderRef","panResponderAnimRef","closeTimeoutRef","useEffect","toValue","useNativeDriver","setTimeout","handleClose","clearTimeout","onDestroy","panReleaseToLeft","gestureState","getPanResponderAnim","x","y","dy","panReleaseToRight","getPanResponder","onMoveShouldSetPanResponder","onPanResponderMove","onPanResponderRelease","icon","backgroundColor","successColor","dangerColor","warningColor","normalColor","animationStyle","opacity","transform","translateY","inputRange","outputRange","placement","scale","styles","iconContainer","container","width","alignItems","toastContainer","paddingHorizontal","paddingVertical","borderRadius","marginVertical","flexDirection","maxWidth","overflow","message","color","fontWeight","marginRight"],"mappings":"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","sourcesContent":["import React, { FC, useRef, useEffect, useState } from \"react\";\r\nimport {\r\n  View,\r\n  StyleSheet,\r\n  Animated,\r\n  StyleProp,\r\n  ViewStyle,\r\n  TextStyle,\r\n  Text,\r\n  TouchableWithoutFeedback,\r\n  PanResponder,\r\n  PanResponderInstance,\r\n  Dimensions,\r\n  PanResponderGestureState,\r\n} from \"react-native\";\r\n\r\nconst dims = Dimensions.get(\"window\");\r\n\r\nexport interface ToastOptions {\r\n  /**\r\n   * Id is optional, you may provide an id only if you want to update toast later using toast.update()\r\n   */\r\n  id?: string;\r\n\r\n  /**\r\n   * Customize toast icon\r\n   */\r\n  icon?: JSX.Element;\r\n\r\n  /**\r\n   * Toast types, You can implement your custom types with JSX using renderType method on ToastContainer.\r\n   */\r\n  type?: \"normal\" | \"success\" | \"danger\" | \"warning\" | string;\r\n\r\n  /**\r\n   * In ms, How long toast will stay before it go away\r\n   */\r\n  duration?: number;\r\n\r\n  /**\r\n   * Customize when toast should be placed\r\n   */\r\n  placement?: \"top\" | \"bottom\";\r\n\r\n  /**\r\n   * Customize style of toast\r\n   */\r\n  style?: StyleProp<ViewStyle>;\r\n\r\n  /**\r\n   * Customize style of toast text\r\n   */\r\n  textStyle?: StyleProp<TextStyle>;\r\n\r\n  /**\r\n   * Customize how fast toast will show and hide\r\n   */\r\n  animationDuration?: number;\r\n\r\n  /**\r\n   * Customize how toast is animated when added or removed\r\n   */\r\n  animationType?: \"slide-in\" | \"zoom-in\";\r\n\r\n  /**\r\n   * Customize success type icon\r\n   */\r\n  successIcon?: JSX.Element;\r\n\r\n  /**\r\n   * Customize danger type icon\r\n   */\r\n  dangerIcon?: JSX.Element;\r\n\r\n  /**\r\n   * Customize warning type icon\r\n   */\r\n  warningIcon?: JSX.Element;\r\n\r\n  /**\r\n   * Customize success type color. changes toast background color\r\n   */\r\n  successColor?: string;\r\n\r\n  /**\r\n   * Customize danger type color. changes toast background color\r\n   */\r\n  dangerColor?: string;\r\n\r\n  /**\r\n   * Customize warning type color. changes toast background color\r\n   */\r\n  warningColor?: string;\r\n\r\n  /**\r\n   * Customize normal type color. changes toast background color\r\n   */\r\n  normalColor?: string;\r\n\r\n  /**\r\n   * Register event for when toast is pressed. If you're using a custom toast you have to pass this to a Touchable.\r\n   */\r\n  onPress?(id: string): void;\r\n\r\n  /**\r\n   * Payload data for custom toasts. You can pass whatever you want\r\n   */\r\n  data?: any;\r\n}\r\n\r\nexport interface ToastProps extends ToastOptions {\r\n  id: string;\r\n  onDestroy(): void;\r\n  message: string | JSX.Element;\r\n  open: boolean;\r\n  renderToast?(toast: ToastProps): JSX.Element;\r\n  renderType?: { [type: string]: (toast: ToastProps) => JSX.Element };\r\n  onHide(): void;\r\n}\r\n\r\nconst Toast: FC<ToastProps> = (props) => {\r\n  let {\r\n    id,\r\n    onDestroy,\r\n    icon,\r\n    type = \"normal\",\r\n    message,\r\n    duration = 5000,\r\n    style,\r\n    textStyle,\r\n    animationDuration = 250,\r\n    animationType = \"slide-in\",\r\n    successIcon,\r\n    dangerIcon,\r\n    warningIcon,\r\n\r\n    successColor,\r\n    dangerColor,\r\n    warningColor,\r\n    normalColor,\r\n\r\n    placement,\r\n\r\n    onPress,\r\n  } = props;\r\n\r\n  const containerRef = useRef<View>(null);\r\n  const [animation] = useState(new Animated.Value(0));\r\n  const panResponderRef = useRef<PanResponderInstance>();\r\n  const panResponderAnimRef = useRef<Animated.ValueXY>();\r\n  const closeTimeoutRef = useRef<NodeJS.Timeout | null>(null);\r\n\r\n  useEffect(() => {\r\n    Animated.timing(animation, {\r\n      toValue: 1,\r\n      useNativeDriver: true,\r\n      duration: animationDuration,\r\n    }).start();\r\n    if (duration !== 0 && typeof duration === \"number\") {\r\n      closeTimeoutRef.current = setTimeout(() => {\r\n        handleClose();\r\n      }, duration);\r\n    }\r\n\r\n    return () => {\r\n      closeTimeoutRef.current && clearTimeout(closeTimeoutRef.current);\r\n    };\r\n  }, []);\r\n\r\n  // Handles hide & hideAll\r\n  useEffect(() => {\r\n    if (!props.open) {\r\n      // Unregister close timeout\r\n      closeTimeoutRef.current && clearTimeout(closeTimeoutRef.current);\r\n\r\n      // Close animation them remove from stack.\r\n      handleClose();\r\n    }\r\n  }, [props.open]);\r\n\r\n  const handleClose = () => {\r\n    Animated.timing(animation, {\r\n      toValue: 0,\r\n      useNativeDriver: true,\r\n      duration: animationDuration,\r\n    }).start(() => onDestroy());\r\n  };\r\n\r\n  const panReleaseToLeft = (gestureState: PanResponderGestureState) => {\r\n    Animated.timing(getPanResponderAnim(), {\r\n      toValue: { x: (-dims.width / 10) * 9, y: gestureState.dy },\r\n      useNativeDriver: true,\r\n      duration: 250,\r\n    }).start(() => onDestroy());\r\n  };\r\n\r\n  const panReleaseToRight = (gestureState: PanResponderGestureState) => {\r\n    Animated.timing(getPanResponderAnim(), {\r\n      toValue: { x: (dims.width / 10) * 9, y: gestureState.dy },\r\n      useNativeDriver: true,\r\n      duration: 250,\r\n    }).start(() => onDestroy());\r\n  };\r\n\r\n  const getPanResponder = () => {\r\n    if (panResponderRef.current) return panResponderRef.current;\r\n    panResponderRef.current = PanResponder.create({\r\n      onMoveShouldSetPanResponder: (_, gestureState) => {\r\n        //return true if user is swiping, return false if it's a single click\r\n        return !(gestureState.dx === 0 && gestureState.dy === 0);\r\n      },\r\n      onPanResponderMove: (_, gestureState) => {\r\n        getPanResponderAnim()?.setValue({\r\n          x: gestureState.dx,\r\n          y: gestureState.dy,\r\n        });\r\n      },\r\n      onPanResponderRelease: (_, gestureState) => {\r\n        if (gestureState.dx > 50) {\r\n          panReleaseToRight(gestureState);\r\n        } else if (gestureState.dx < -50) {\r\n          panReleaseToLeft(gestureState);\r\n        } else {\r\n          Animated.spring(getPanResponderAnim(), {\r\n            toValue: { x: 0, y: 0 },\r\n            useNativeDriver: true,\r\n          }).start();\r\n        }\r\n      },\r\n    });\r\n    return panResponderRef.current;\r\n  };\r\n\r\n  const getPanResponderAnim = () => {\r\n    if (panResponderAnimRef.current) return panResponderAnimRef.current;\r\n    panResponderAnimRef.current = new Animated.ValueXY({ x: 0, y: 0 });\r\n    return panResponderAnimRef.current;\r\n  };\r\n\r\n  if (icon === undefined) {\r\n    switch (type) {\r\n      case \"success\": {\r\n        if (successIcon) {\r\n          icon = successIcon;\r\n        }\r\n        break;\r\n      }\r\n\r\n      case \"danger\": {\r\n        if (dangerIcon) {\r\n          icon = dangerIcon;\r\n        }\r\n        break;\r\n      }\r\n      case \"warning\": {\r\n        if (warningIcon) {\r\n          icon = warningIcon;\r\n        }\r\n        break;\r\n      }\r\n    }\r\n  }\r\n\r\n  let backgroundColor = \"\";\r\n  switch (type) {\r\n    case \"success\":\r\n      backgroundColor = successColor || \"#00C851\";\r\n      break;\r\n    case \"danger\":\r\n      backgroundColor = dangerColor || \"#ff4444\";\r\n      break;\r\n    case \"warning\":\r\n      backgroundColor = warningColor || \"#ffbb33\";\r\n      break;\r\n    default:\r\n      backgroundColor = normalColor || \"#333\";\r\n  }\r\n\r\n  const animationStyle: Animated.WithAnimatedObject<ViewStyle> = {\r\n    opacity: animation,\r\n    transform: [\r\n      {\r\n        translateY: animation.interpolate({\r\n          inputRange: [0, 1],\r\n          outputRange: placement === \"bottom\" ? [20, 0] : [-20, 0], // 0 : 150, 0.5 : 75, 1 : 0\r\n        }),\r\n      },\r\n      getPanResponderAnim().getTranslateTransform()[0],\r\n    ],\r\n  };\r\n\r\n  if (animationType === \"zoom-in\") {\r\n    animationStyle.transform?.push({\r\n      scale: animation.interpolate({\r\n        inputRange: [0, 1],\r\n        outputRange: [0.7, 1],\r\n      }),\r\n    });\r\n  }\r\n\r\n  return (\r\n    <Animated.View\r\n      ref={containerRef}\r\n      {...getPanResponder().panHandlers}\r\n      style={[styles.container, animationStyle]}\r\n    >\r\n      {props.renderType && props.renderType[type] ? (\r\n        props.renderType[type](props)\r\n      ) : props.renderToast ? (\r\n        props.renderToast(props)\r\n      ) : (\r\n        <TouchableWithoutFeedback\r\n          disabled={!onPress}\r\n          onPress={() => onPress && onPress(id)}\r\n        >\r\n          <View style={[styles.toastContainer, { backgroundColor }, style]}>\r\n            {icon ? <View style={styles.iconContainer}>{icon}</View> : null}\r\n            {React.isValidElement(message) ? (\r\n              message\r\n            ) : (\r\n              <Text style={[styles.message, textStyle]}>{message}</Text>\r\n            )}\r\n          </View>\r\n        </TouchableWithoutFeedback>\r\n      )}\r\n    </Animated.View>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: { width: \"100%\", alignItems: \"center\" },\r\n  toastContainer: {\r\n    paddingHorizontal: 12,\r\n    paddingVertical: 12,\r\n    borderRadius: 5,\r\n    marginVertical: 5,\r\n    flexDirection: \"row\",\r\n    alignItems: \"center\",\r\n    maxWidth: (dims.width / 10) * 9,\r\n    overflow: \"hidden\",\r\n  },\r\n  message: {\r\n    color: \"#fff\",\r\n    fontWeight: \"500\",\r\n  },\r\n  iconContainer: {\r\n    marginRight: 5,\r\n  },\r\n});\r\n\r\nexport default Toast;\r\n"]},"metadata":{},"sourceType":"module"}