{"ast":null,"code":"import*as React from'react';import Button from\"react-native-web/dist/exports/Button\";import Text from\"react-native-web/dist/exports/Text\";import View from\"react-native-web/dist/exports/View\";import{createBottomTabNavigator}from'@react-navigation/bottom-tabs';import{getFocusedRouteNameFromRoute}from'@react-navigation/native';import'react-native-gesture-handler';import HomeScreen from\"../screen/HomeScreen\";import Order from\"./Order\";import Qr from\"./Qr\";import SettingsScreen from\"./SettingsScreen\";import StoreScreen from\"./Store\";import{Ionicons}from'@expo/vector-icons';import{LogBox}from\"react-native-web/dist/index\";LogBox.ignoreLogs(['Warning: ...']);LogBox.ignoreAllLogs();var getVisibility=function getVisibility(route){var routeName=getFocusedRouteNameFromRoute(route);if(routeName==='QrScan'){return false;}return true;};var Tab=createBottomTabNavigator();export default function Main(){return React.createElement(Tab.Navigator,{screenOptions:function screenOptions(_ref){var route=_ref.route;return{tabBarVisible:getVisibility(route),tabBarIcon:function tabBarIcon(_ref2){var focused=_ref2.focused,color=_ref2.color,size=_ref2.size;var iconName;if(route.name==='Home'){iconName=focused?'home':'home-outline';}else if(route.name==='Order'){iconName=focused?'mail-open':'mail-outline';}else if(route.name==='Qr'){iconName=focused?'qr-code':'qr-code-outline';}else if(route.name==='Store'){iconName=focused?'shirt':'shirt-outline';}else if(route.name==='Settings'){iconName=focused?'settings':'settings-outline';}return React.createElement(Ionicons,{name:iconName,size:24,color:\"black\"});}};},tabBarOptions:{activeTintColor:'tomato',inactiveTintColor:'gray'}},React.createElement(Tab.Screen,{name:\"Home\",component:HomeScreen}),React.createElement(Tab.Screen,{name:\"Order\",component:Order}),React.createElement(Tab.Screen,{name:\"Qr\",component:Qr}),React.createElement(Tab.Screen,{name:\"Store\",component:StoreScreen}),React.createElement(Tab.Screen,{name:\"Settings\",component:SettingsScreen}));}","map":{"version":3,"sources":["C:/Users/Note/Desktop/surfin/navigators/Main.js"],"names":["React","createBottomTabNavigator","getFocusedRouteNameFromRoute","HomeScreen","Order","Qr","SettingsScreen","StoreScreen","Ionicons","LogBox","ignoreLogs","ignoreAllLogs","getVisibility","route","routeName","Tab","Main","tabBarVisible","tabBarIcon","focused","color","size","iconName","name","activeTintColor","inactiveTintColor"],"mappings":"AAAA,MAAO,GAAKA,CAAAA,KAAZ,KAAuB,OAAvB,C,mKAEA,OAASC,wBAAT,KAAyC,+BAAzC,CACA,OAASC,4BAAT,KAA6C,0BAA7C,CACA,MAAO,8BAAP,CACA,MAAOC,CAAAA,UAAP,4BACA,MAAOC,CAAAA,KAAP,eACA,MAAOC,CAAAA,EAAP,YACA,MAAOC,CAAAA,cAAP,wBACA,MAAOC,CAAAA,WAAP,eACA,OAAQC,QAAR,KAAuB,oBAAvB,C,OACSC,M,mCAGTA,MAAM,CAACC,UAAP,CAAkB,CAAC,cAAD,CAAlB,EACAD,MAAM,CAACE,aAAP,GAEA,GAAMC,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,CAACC,KAAD,CAAW,CAC/B,GAAIC,CAAAA,SAAS,CAAGZ,4BAA4B,CAACW,KAAD,CAA5C,CACC,GAAIC,SAAS,GAAK,QAAlB,CAA4B,CACzB,MAAO,MAAP,CACH,CACD,MAAO,KAAP,CACD,CAND,CAQA,GAAMC,CAAAA,GAAG,CAAGd,wBAAwB,EAApC,CACA,cAAe,SAASe,CAAAA,IAAT,EAAgB,CAC3B,MACH,qBAAC,GAAD,CAAK,SAAL,EACA,aAAa,CAAE,gCAAGH,CAAAA,KAAH,MAAGA,KAAH,OAAgB,CAC7BI,aAAa,CAAEL,aAAa,CAACC,KAAD,CADC,CAE7BK,UAAU,CAAE,0BAA8B,IAA3BC,CAAAA,OAA2B,OAA3BA,OAA2B,CAAlBC,KAAkB,OAAlBA,KAAkB,CAAXC,IAAW,OAAXA,IAAW,CACxC,GAAIC,CAAAA,QAAJ,CACA,GAAIT,KAAK,CAACU,IAAN,GAAe,MAAnB,CAA2B,CACzBD,QAAQ,CAAGH,OAAO,CACd,MADc,CAEd,cAFJ,CAGD,CAJD,IAIO,IAAIN,KAAK,CAACU,IAAN,GAAe,OAAnB,CAA4B,CACjCD,QAAQ,CAAGH,OAAO,CAAG,WAAH,CAAiB,cAAnC,CACD,CAFM,IAEA,IAAIN,KAAK,CAACU,IAAN,GAAe,IAAnB,CAAyB,CAC9BD,QAAQ,CAAGH,OAAO,CAAG,SAAH,CAAe,iBAAjC,CACD,CAFM,IAEA,IAAIN,KAAK,CAACU,IAAN,GAAe,OAAnB,CAA4B,CACjCD,QAAQ,CAAGH,OAAO,CAAG,OAAH,CAAa,eAA/B,CACD,CAFM,IAEA,IAAIN,KAAK,CAACU,IAAN,GAAe,UAAnB,CAA+B,CACpCD,QAAQ,CAAGH,OAAO,CAAG,UAAH,CAAgB,kBAAlC,CACD,CAGD,MAAO,qBAAC,QAAD,EAAU,IAAI,CAAEG,QAAhB,CAA0B,IAAI,CAAE,EAAhC,CAAoC,KAAK,CAAC,OAA1C,EAAP,CACD,CApB4B,CAAhB,EADf,CAwBE,aAAa,CAAE,CACbE,eAAe,CAAE,QADJ,CAEbC,iBAAiB,CAAE,MAFN,CAxBjB,EA6BE,oBAAC,GAAD,CAAK,MAAL,EAAY,IAAI,CAAC,MAAjB,CAAwB,SAAS,CAAEtB,UAAnC,EA7BF,CA8BE,oBAAC,GAAD,CAAK,MAAL,EAAY,IAAI,CAAC,OAAjB,CAAyB,SAAS,CAAEC,KAApC,EA9BF,CA+BE,oBAAC,GAAD,CAAK,MAAL,EAAY,IAAI,CAAC,IAAjB,CAAsB,SAAS,CAAEC,EAAjC,EA/BF,CAgCE,oBAAC,GAAD,CAAK,MAAL,EAAY,IAAI,CAAC,OAAjB,CAAyB,SAAS,CAAEE,WAApC,EAhCF,CAiCE,oBAAC,GAAD,CAAK,MAAL,EAAY,IAAI,CAAC,UAAjB,CAA4B,SAAS,CAAED,cAAvC,EAjCF,CADG,CAqCH","sourcesContent":["import * as React from 'react';\r\nimport { Button, Text, View } from 'react-native';\r\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\r\nimport { getFocusedRouteNameFromRoute } from '@react-navigation/native';\r\nimport 'react-native-gesture-handler';\r\nimport HomeScreen from '../screen/HomeScreen';\r\nimport Order from './Order';\r\nimport Qr from './Qr'\r\nimport SettingsScreen from './SettingsScreen';\r\nimport StoreScreen from './Store';\r\nimport {Ionicons} from '@expo/vector-icons';\r\nimport { LogBox } from 'react-native';\r\n\r\n\r\nLogBox.ignoreLogs(['Warning: ...']);\r\nLogBox.ignoreAllLogs();\r\n\r\nconst getVisibility = (route) => {\r\n  let routeName = getFocusedRouteNameFromRoute(route);\r\n   if (routeName === 'QrScan') {\r\n      return false;\r\n  }\r\n  return true;\r\n}\r\n\r\nconst Tab = createBottomTabNavigator();\r\nexport default function Main() {\r\n    return (\r\n <Tab.Navigator\r\n screenOptions={({ route }) => ({\r\n   tabBarVisible: getVisibility(route),\r\n   tabBarIcon: ({ focused, color, size }) => {\r\n     let iconName;\r\n     if (route.name === 'Home') {\r\n       iconName = focused\r\n         ? 'home'\r\n         : 'home-outline';\r\n     } else if (route.name === 'Order') {\r\n       iconName = focused ? 'mail-open' : 'mail-outline';\r\n     } else if (route.name === 'Qr') {\r\n       iconName = focused ? 'qr-code' : 'qr-code-outline';\r\n     } else if (route.name === 'Store') {\r\n       iconName = focused ? 'shirt' : 'shirt-outline';\r\n     } else if (route.name === 'Settings') {\r\n       iconName = focused ? 'settings' : 'settings-outline';\r\n     }\r\n\r\n     // You can return any component that you like here!\r\n     return <Ionicons name={iconName} size={24} color=\"black\" />;\r\n   },\r\n })}\r\n\r\n   tabBarOptions={{\r\n     activeTintColor: 'tomato',\r\n     inactiveTintColor: 'gray',\r\n   }}\r\n >\r\n   <Tab.Screen name=\"Home\" component={HomeScreen} />\r\n   <Tab.Screen name=\"Order\" component={Order} />\r\n   <Tab.Screen name=\"Qr\" component={Qr}/>\r\n   <Tab.Screen name=\"Store\" component={StoreScreen} />\r\n   <Tab.Screen name=\"Settings\" component={SettingsScreen} />\r\n </Tab.Navigator>\r\n   );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}