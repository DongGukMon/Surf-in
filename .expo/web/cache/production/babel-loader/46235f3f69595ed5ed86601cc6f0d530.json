{"ast":null,"code":"import _defineProperty from\"@babel/runtime/helpers/defineProperty\";import _slicedToArray from\"@babel/runtime/helpers/slicedToArray\";function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);if(enumerableOnly){symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable;});}keys.push.apply(keys,symbols);}return keys;}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=arguments[i]!=null?arguments[i]:{};if(i%2){ownKeys(Object(source),true).forEach(function(key){_defineProperty(target,key,source[key]);});}else if(Object.getOwnPropertyDescriptors){Object.defineProperties(target,Object.getOwnPropertyDescriptors(source));}else{ownKeys(Object(source)).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key));});}}return target;}import _regeneratorRuntime from\"@babel/runtime/regenerator\";import React,{useState,useEffect,useContext}from'react';import Text from\"react-native-web/dist/exports/Text\";import View from\"react-native-web/dist/exports/View\";import StyleSheet from\"react-native-web/dist/exports/StyleSheet\";import Button from\"react-native-web/dist/exports/Button\";import ActivityIndicator from\"react-native-web/dist/exports/ActivityIndicator\";import{BarCodeScanner}from'expo-barcode-scanner';import*as firebase from'firebase';import firebaseInit from\"../../src/firebaseInit\";import{addPoint}from\"../../src/firebaseCall\";import{UserInfoContext}from\"../../src/UserInfoContext\";import{useToast}from\"react-native-toast-notifications\";import{qrContext}from\"../../navigators/StackContext\";firebaseInit();export default function QrScan(_ref){var navigation=_ref.navigation;var _useState=useState(null),_useState2=_slicedToArray(_useState,2),hasPermission=_useState2[0],setHasPermission=_useState2[1];var _useState3=useState(false),_useState4=_slicedToArray(_useState3,2),scanned=_useState4[0],setScanned=_useState4[1];var _useState5=useState(false),_useState6=_slicedToArray(_useState5,2),gotError=_useState6[0],setGotError=_useState6[1];var _useContext=useContext(UserInfoContext),userInfo=_useContext.userInfo;var uid=userInfo.uid;var toast=useToast();var _useContext2=useContext(qrContext),modalHandle=_useContext2.modalHandle,setModalHandle=_useContext2.setModalHandle;function throwToast(massage){toast.show(massage,{type:\"success\",duration:4000,offset:30,animationType:\"slide-in\"});}useEffect(function(){(function _callee(){var _await$BarCodeScanner,status;return _regeneratorRuntime.async(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return _regeneratorRuntime.awrap(BarCodeScanner.requestPermissionsAsync());case 2:_await$BarCodeScanner=_context.sent;status=_await$BarCodeScanner.status;setHasPermission(status==='granted');case 5:case\"end\":return _context.stop();}}},null,null,null,Promise);})();},[]);var handleBarCodeScanned=function handleBarCodeScanned(data){setScanned(true);try{var _data$data$split=data['data'].split(\"&\"),_data$data$split2=_slicedToArray(_data$data$split,2),value=_data$data$split2[0],action=_data$data$split2[1];switch(action){case\"Friend\":return actionFriends(value);case\"Trade\":navigation.goBack();return setModalHandle(_objectSpread(_objectSpread({},modalHandle),{},{modalVisibleTrade:true,friendUid:value}));case\"Order\":return actionOrder(value);default:alert(\"올바른 Qr코드를 입력해주세요.\");setGotError(true);}}catch(e){console.log(e);}};var actionOrder=function actionOrder(qrData){var _qrData$split=qrData.split(\"/\"),_qrData$split2=_slicedToArray(_qrData$split,2),orderKey=_qrData$split2[0],orderUuid=_qrData$split2[1];firebase.database().ref('master/'+orderKey).once('value',function(snapshot){if(snapshot.val()){var orderData=snapshot.val();var qrList=[];Object.values(orderData.qrId).map(function(item){qrList.push(item['uuid']);});if(qrList.includes(orderUuid)){if(orderData.timeLimit<new Date().getTime()){alert(\"이미 종료된 오더입니다.\");navigation.goBack();return;}if(orderData.complite){var breakPoint=false;if(Object.values(orderData.complite).length>=orderData.peopleNumber){alert(\"인원 마감되었습니다.\");navigation.goBack();return;}else if(orderData.qrMulti&&orderData.uidMulti){Object.values(orderData.complite).map(function(item){if(JSON.stringify(item)==JSON.stringify(_defineProperty({},orderUuid,uid))){alert(\"이미 참여하셨습니다. N:N\");breakPoint=true;navigation.goBack();}});}else if(orderData.qrMulti&&!orderData.uidMulti){Object.values(orderData.complite).map(function(item){if(Object.values(item)[0]==uid){alert(\"이미 참여하셨습니다.N:1\");breakPoint=true;navigation.goBack();}});}else if(!orderData.qrMulti&&orderData.uidMulti){Object.values(orderData.complite).map(function(item){if(Object.keys(item)[0]==orderUuid){alert(\"이미 참여하셨습니다.1:N\");breakPoint=true;navigation.goBack();}});}else if(!orderData.qrMulti&&!orderData.uidMulti){Object.values(orderData.complite).map(function(item){if(Object.keys(item)[0]==orderUuid||Object.values(item)[0]==uid){alert(\"이미 참여하셨습니다.1:1\");breakPoint=true;navigation.goBack();}});}if(breakPoint){return;}}firebase.database().ref('point/'+uid).once('value',function(snapshot){var myPoint=snapshot.val().totalPoint;addPoint(uid,myPoint,orderData.reward,\"Order\");});firebase.database().ref('master/'+orderKey+'/complite').push(_defineProperty({},orderUuid,uid));navigation.goBack();throwToast(\"적립 완료!\");}else{alert(\"올바르지 않은 QR ID입니다\");navigation.goBack();}}else{alert(\"올바르지 않은 오더 입니다\");navigation.goBack();}});};var actionFriends=function actionFriends(friendUid){firebase.database().ref('friends/'+uid).once('value',function(snapshot){var friendsList=snapshot.val()?Object.values(snapshot.val()):[];if(friendsList.includes(friendUid)){navigation.goBack();alert(\"이미 등록된 친구입니다.\");}else{firebase.database().ref('point/'+friendUid).once('value',function(snapshot){var friendPoint=snapshot.val().totalPoint;addPoint(friendUid,friendPoint,100,\"Friend\");});firebase.database().ref('point/'+uid).once('value',function(snapshot){var myPoint=snapshot.val().totalPoint;addPoint(uid,myPoint,100,\"Friend\");});firebase.database().ref('friends').child(uid).push(friendUid);firebase.database().ref('friends').child(friendUid).push(uid);navigation.goBack();throwToast(\"적립 완료!\");}});};if(hasPermission===null){return React.createElement(Text,null,\"Requesting for camera permission\");}if(hasPermission===false){return React.createElement(Text,null,\"No access to camera\");}return React.createElement(View,{style:styles.container},React.createElement(BarCodeScanner,{onBarCodeScanned:scanned?undefined:handleBarCodeScanned,style:StyleSheet.absoluteFillObject}),gotError&&React.createElement(Button,{title:'Tap to Scan Again',onPress:function onPress(){setScanned(false);setGotError(false);}}),scanned&&!gotError&&React.createElement(ActivityIndicator,null));}var styles=StyleSheet.create({container:{flex:1,flexDirection:'column',justifyContent:'center'}});","map":{"version":3,"sources":["C:/Users/Note/Desktop/surfin/screen/QrFolder/QrScan.js"],"names":["React","useState","useEffect","useContext","BarCodeScanner","firebase","firebaseInit","addPoint","UserInfoContext","useToast","qrContext","QrScan","navigation","hasPermission","setHasPermission","scanned","setScanned","gotError","setGotError","userInfo","uid","toast","modalHandle","setModalHandle","throwToast","massage","show","type","duration","offset","animationType","requestPermissionsAsync","status","handleBarCodeScanned","data","split","value","action","actionFriends","goBack","modalVisibleTrade","friendUid","actionOrder","alert","e","console","log","qrData","orderKey","orderUuid","database","ref","once","snapshot","val","orderData","qrList","Object","values","qrId","map","item","push","includes","timeLimit","Date","getTime","complite","breakPoint","length","peopleNumber","qrMulti","uidMulti","JSON","stringify","keys","myPoint","totalPoint","reward","friendsList","friendPoint","child","styles","container","undefined","StyleSheet","absoluteFillObject","create","flex","flexDirection","justifyContent"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useContext} from 'react';\r\nimport { Text, View, StyleSheet, Button, ActivityIndicator } from 'react-native';\r\nimport { BarCodeScanner } from 'expo-barcode-scanner';\r\nimport * as firebase from 'firebase';\r\nimport firebaseInit from '../../src/firebaseInit';\r\nimport {addPoint} from '../../src/firebaseCall';\r\nimport { UserInfoContext } from '../../src/UserInfoContext';\r\nimport { useToast } from \"react-native-toast-notifications\";\r\nimport {qrContext} from '../../navigators/StackContext';\r\n\r\nfirebaseInit()\r\n\r\n\r\nexport default function QrScan({navigation}) {\r\n  const [hasPermission, setHasPermission] = useState(null);\r\n  const [scanned, setScanned] = useState(false);\r\n  const [gotError, setGotError] = useState(false);\r\n  const {userInfo} = useContext(UserInfoContext);\r\n  const {uid} = userInfo;\r\n\r\n  const toast = useToast();\r\n\r\n  const {modalHandle, setModalHandle} = useContext(qrContext);\r\n\r\n  function throwToast(massage){\r\n    toast.show(massage,{\r\n      type: \"success\",\r\n      duration: 4000,\r\n      offset: 30,\r\n      animationType: \"slide-in\",\r\n    });\r\n  }\r\n\r\n  useEffect(() => {\r\n    (async () => {\r\n      const { status } = await BarCodeScanner.requestPermissionsAsync();\r\n      setHasPermission(status === 'granted');\r\n    })();\r\n  }, []);\r\n\r\n  const handleBarCodeScanned = (data) => {\r\n    setScanned(true);\r\n    try {\r\n      const [value, action]=data['data'].split(\"&\");\r\n      switch (action){\r\n        case \"Friend\":\r\n          return actionFriends(value);\r\n        case \"Trade\":\r\n          navigation.goBack()\r\n          return setModalHandle({...modalHandle,modalVisibleTrade:true,friendUid:value})  \r\n        case \"Order\":\r\n          return actionOrder(value);\r\n        default:\r\n          alert(\"올바른 Qr코드를 입력해주세요.\")\r\n          setGotError(true);\r\n      }\r\n    } catch(e) {\r\n      console.log(e);\r\n      \r\n    }\r\n  }\r\n    \r\n  const actionOrder = (qrData) => {\r\n\r\n    const [orderKey, orderUuid]=qrData.split(\"/\");\r\n\r\n    firebase.database().ref('master/'+orderKey).once('value',(snapshot)=> {\r\n    \r\n      //오더의 key가 올바르면 실행\r\n      if(snapshot.val()){\r\n        const orderData = snapshot.val()\r\n        const qrList = []\r\n        Object.values(orderData.qrId).map((item)=>{\r\n          qrList.push(item['uuid'])\r\n        })\r\n        //QR의 uuid가 올바르면 실행\r\n        if(qrList.includes(orderUuid)){\r\n\r\n           // 유효기간이 지나지 않았는지\r\n          if (orderData.timeLimit < new Date().getTime()){\r\n            alert(\"이미 종료된 오더입니다.\")\r\n            navigation.goBack()\r\n            return\r\n          }\r\n\r\n          //동일한 uuid : uid 로 완료한 기록이 있는지\r\n          if(orderData.complite){\r\n            let breakPoint = false\r\n            if(Object.values(orderData.complite).length >= orderData.peopleNumber){\r\n              alert(\"인원 마감되었습니다.\")\r\n              navigation.goBack()\r\n              return\r\n            } else if(orderData.qrMulti && orderData.uidMulti){\r\n              Object.values(orderData.complite).map((item)=>{\r\n                if(JSON.stringify(item) == JSON.stringify({[orderUuid]:uid})){\r\n                    alert(\"이미 참여하셨습니다. N:N\")\r\n                    breakPoint = true\r\n                    navigation.goBack()\r\n                }\r\n              })\r\n            } else if(orderData.qrMulti && !orderData.uidMulti){\r\n              Object.values(orderData.complite).map((item)=>{\r\n                if(Object.values(item)[0] == uid){\r\n                    alert(\"이미 참여하셨습니다.N:1\")\r\n                    breakPoint = true\r\n                    navigation.goBack()\r\n                }\r\n              })\r\n            } else if(!orderData.qrMulti && orderData.uidMulti){\r\n              Object.values(orderData.complite).map((item)=>{\r\n                if(Object.keys(item)[0] == orderUuid){\r\n                    alert(\"이미 참여하셨습니다.1:N\")\r\n                    breakPoint = true\r\n                    navigation.goBack()\r\n                }\r\n              })\r\n            } else if(!orderData.qrMulti && !orderData.uidMulti){\r\n              Object.values(orderData.complite).map((item)=>{\r\n                if((Object.keys(item)[0] == orderUuid) || (Object.values(item)[0] == uid)){\r\n                    alert(\"이미 참여하셨습니다.1:1\")\r\n                    breakPoint = true\r\n                    navigation.goBack()\r\n                }\r\n              })\r\n            }\r\n            if (breakPoint){\r\n              return\r\n            }\r\n          }\r\n          \r\n          //이상 없었을 때 정상 처리\r\n\r\n          //포인트 주기\r\n          firebase.database().ref('point/' + uid).once('value', (snapshot) => {\r\n            const myPoint = snapshot.val().totalPoint;\r\n            addPoint(uid,myPoint,orderData.reward,\"Order\")\r\n          })\r\n\r\n          //완료자 명단\r\n          firebase\r\n            .database()\r\n            .ref('master/'+ orderKey +'/complite')\r\n            .push(\r\n              {[orderUuid]:uid}\r\n            );\r\n\r\n          navigation.goBack()\r\n          throwToast(\"적립 완료!\")\r\n        }\r\n        //QR의 uuid가 올바르지 않을때\r\n        else{\r\n          alert(\"올바르지 않은 QR ID입니다\")\r\n          navigation.goBack()\r\n          }\r\n      } \r\n      //오더 Key가 올바르지 않을때\r\n      else{\r\n        alert(\"올바르지 않은 오더 입니다\")\r\n        navigation.goBack()\r\n        }\r\n    })\r\n  }\r\n\r\n  const actionFriends = (friendUid) => {\r\n    firebase.database().ref('friends/' + uid).once('value', (snapshot) => {\r\n      const friendsList = snapshot.val() ? Object.values(snapshot.val()) : [];\r\n     if(friendsList.includes(friendUid)){\r\n         navigation.goBack()\r\n         alert(\"이미 등록된 친구입니다.\")\r\n       } else{\r\n        firebase.database().ref('point/' + friendUid).once('value', (snapshot) => {\r\n          const friendPoint = snapshot.val().totalPoint;\r\n          addPoint(friendUid,friendPoint,100,\"Friend\")\r\n        })\r\n        firebase.database().ref('point/' + uid).once('value', (snapshot) => {\r\n          const myPoint = snapshot.val().totalPoint;\r\n          addPoint(uid,myPoint,100,\"Friend\")\r\n        })\r\n        firebase\r\n        .database()\r\n        .ref('friends')\r\n        .child(uid)\r\n        .push(\r\n          friendUid\r\n          );\r\n        firebase\r\n        .database()\r\n        .ref('friends')\r\n        .child(friendUid)\r\n        .push(\r\n          uid\r\n        );\r\n    \r\n        navigation.goBack()\r\n        throwToast(\"적립 완료!\")\r\n       }\r\n     })\r\n  }\r\n\r\n\r\n  if (hasPermission === null) {\r\n    return <Text>Requesting for camera permission</Text>;\r\n  }\r\n  if (hasPermission === false) {\r\n    return <Text>No access to camera</Text>;\r\n  }\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <BarCodeScanner\r\n        onBarCodeScanned={scanned ? undefined : handleBarCodeScanned}\r\n        style={StyleSheet.absoluteFillObject}\r\n      />\r\n      {gotError && <Button title={'Tap to Scan Again'} onPress={() => {setScanned(false); setGotError(false)}} />}\r\n      {(scanned && !gotError) && <ActivityIndicator/>}\r\n    </View>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    flexDirection: 'column',\r\n    justifyContent: 'center',\r\n  },\r\n});\r\n"]},"metadata":{},"sourceType":"module"}