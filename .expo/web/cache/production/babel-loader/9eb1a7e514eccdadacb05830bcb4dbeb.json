{"ast":null,"code":"import _regeneratorRuntime from\"@babel/runtime/regenerator\";import React,{useContext}from'react';import firebase from'firebase';import firebaseInit from\"./firebaseInit\";firebaseInit();export function throwOrder(order,point,userId){return _regeneratorRuntime.async(function throwOrder$(_context){while(1){switch(_context.prev=_context.next){case 0:firebase.database().ref('users/'+userId).set({order:order,point:point,regiDate:new Date()});case 1:case\"end\":return _context.stop();}}},null,null,null,Promise);}export function addPoint(uid,point,amount,action){return _regeneratorRuntime.async(function addPoint$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:firebase.database().ref('point/'+uid).update({totalPoint:point+Number(amount)});firebase.database().ref('point/'+uid+'/pointLog').push({action:action,changePoint:amount,regiDate:new Date()});case 2:case\"end\":return _context2.stop();}}},null,null,null,Promise);}export function firstSignUp(result){return _regeneratorRuntime.async(function firstSignUp$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:firebase.database().ref('users/'+result.user.uid).set({uid:result.user.uid,gmail:result.user.email,profile_picture:result.additionalUserInfo.profile.picture,name:result.additionalUserInfo.profile.given_name,created_at:Date.now(),last_logged_in:Date.now()});firebase.database().ref('point/'+result.user.uid).set({totalPoint:1000});firebase.database().ref('point/'+result.user.uid+'/pointLog').push({action:\"signUp\",changePoint:1000});case 3:case\"end\":return _context3.stop();}}},null,null,null,Promise);}export function alreadySignup(result){return _regeneratorRuntime.async(function alreadySignup$(_context4){while(1){switch(_context4.prev=_context4.next){case 0:firebase.database().ref('users/'+result.user.uid).update({last_logged_in:Date.now()});case 1:case\"end\":return _context4.stop();}}},null,null,null,Promise);}","map":{"version":3,"sources":["C:/Users/Note/Desktop/surfin/src/firebaseCall.js"],"names":["React","useContext","firebase","firebaseInit","throwOrder","order","point","userId","database","ref","set","regiDate","Date","addPoint","uid","amount","action","update","totalPoint","Number","push","changePoint","firstSignUp","result","user","gmail","email","profile_picture","additionalUserInfo","profile","picture","name","given_name","created_at","now","last_logged_in","alreadySignup"],"mappings":"4DAAA,MAAOA,CAAAA,KAAP,EAAcC,UAAd,KAA+B,OAA/B,CACA,MAAOC,CAAAA,QAAP,KAAqB,UAArB,CACA,MAAOC,CAAAA,YAAP,sBAGAA,YAAY,GAIZ,MAAO,SAAeC,CAAAA,UAAf,CAA0BC,KAA1B,CAAiCC,KAAjC,CAAwCC,MAAxC,sHAEHL,QAAQ,CACLM,QADH,GAEGC,GAFH,CAEO,SAAWF,MAFlB,EAGGG,GAHH,CAGO,CACHL,KAAK,CAAEA,KADJ,CAEHC,KAAK,CAAEA,KAFJ,CAGHK,QAAQ,CAAE,GAAIC,CAAAA,IAAJ,EAHP,CAHP,EAFG,qEAaL,MAAO,SAAeC,CAAAA,QAAf,CAAwBC,GAAxB,CAA4BR,KAA5B,CAAkCS,MAAlC,CAAyCC,MAAzC,uHAELd,QAAQ,CACLM,QADH,GAEGC,GAFH,CAEO,SAAWK,GAFlB,EAGGG,MAHH,CAGU,CACNC,UAAU,CAAEZ,KAAK,CAACa,MAAM,CAACJ,MAAD,CADlB,CAHV,EAOAb,QAAQ,CACLM,QADH,GAEGC,GAFH,CAEO,SAAWK,GAAX,CAAiB,WAFxB,EAGGM,IAHH,CAGQ,CACJJ,MAAM,CAAEA,MADJ,CAEJK,WAAW,CAAEN,MAFT,CAGJJ,QAAQ,CAAE,GAAIC,CAAAA,IAAJ,EAHN,CAHR,EATK,sEAoBT,MAAO,SAAeU,CAAAA,WAAf,CAA2BC,MAA3B,0HACLrB,QAAQ,CACLM,QADH,GAEGC,GAFH,CAEO,SAAWc,MAAM,CAACC,IAAP,CAAYV,GAF9B,EAGGJ,GAHH,CAGO,CACHI,GAAG,CAAES,MAAM,CAACC,IAAP,CAAYV,GADd,CAEHW,KAAK,CAAEF,MAAM,CAACC,IAAP,CAAYE,KAFhB,CAGHC,eAAe,CAAEJ,MAAM,CAACK,kBAAP,CAA0BC,OAA1B,CAAkCC,OAHhD,CAIHC,IAAI,CAAER,MAAM,CAACK,kBAAP,CAA0BC,OAA1B,CAAkCG,UAJrC,CAKHC,UAAU,CAAErB,IAAI,CAACsB,GAAL,EALT,CAMHC,cAAc,CAAEvB,IAAI,CAACsB,GAAL,EANb,CAHP,EAYAhC,QAAQ,CACPM,QADD,GAECC,GAFD,CAEK,SAASc,MAAM,CAACC,IAAP,CAAYV,GAF1B,EAGCJ,GAHD,CAGK,CACHQ,UAAU,CAAC,IADR,CAHL,EAOAhB,QAAQ,CACLM,QADH,GAEGC,GAFH,CAEO,SAASc,MAAM,CAACC,IAAP,CAAYV,GAArB,CAAyB,WAFhC,EAGGM,IAHH,CAGQ,CACJJ,MAAM,CAAC,QADH,CAEJK,WAAW,CAAC,IAFR,CAHR,EApBK,sEA6BP,MAAO,SAAee,CAAAA,aAAf,CAA6Bb,MAA7B,4HACLrB,QAAQ,CACLM,QADH,GAEGC,GAFH,CAEO,SAAWc,MAAM,CAACC,IAAP,CAAYV,GAF9B,EAGGG,MAHH,CAGU,CACNkB,cAAc,CAAEvB,IAAI,CAACsB,GAAL,EADV,CAHV,EADK","sourcesContent":["import React,{useContext} from 'react';\r\nimport firebase from 'firebase'\r\nimport firebaseInit from './firebaseInit';\r\n// import {UserInfoContext} from './UserInfoContext';\r\n\r\nfirebaseInit()\r\n\r\n// const [userInfo, setUserInfo] = useContext(UserInfoContext);\r\n\r\nexport async function throwOrder(order, point, userId) {\r\n  \r\n    firebase\r\n      .database()\r\n      .ref('users/' + userId)\r\n      .set({\r\n        order: order,\r\n        point: point,\r\n        regiDate: new Date()\r\n      });\r\n  }\r\n\r\n  \r\n  export async function addPoint(uid,point,amount,action) {\r\n  \r\n    firebase\r\n      .database()\r\n      .ref('point/' + uid)\r\n      .update({\r\n        totalPoint: point+Number(amount)\r\n      });\r\n  \r\n    firebase\r\n      .database()\r\n      .ref('point/' + uid + '/pointLog')\r\n      .push({\r\n        action: action,\r\n        changePoint: amount,\r\n        regiDate: new Date()\r\n      });\r\n  }\r\n\r\n\r\nexport async function firstSignUp(result) {\r\n  firebase\r\n    .database()\r\n    .ref('users/' + result.user.uid)\r\n    .set({\r\n      uid: result.user.uid,\r\n      gmail: result.user.email,\r\n      profile_picture: result.additionalUserInfo.profile.picture,\r\n      name: result.additionalUserInfo.profile.given_name,\r\n      created_at: Date.now(),\r\n      last_logged_in: Date.now()\r\n    });\r\n\r\n  firebase\r\n  .database()\r\n  .ref('point/'+result.user.uid)\r\n  .set({\r\n    totalPoint:1000\r\n  });\r\n  \r\n  firebase\r\n    .database()\r\n    .ref('point/'+result.user.uid+'/pointLog')\r\n    .push({\r\n      action:\"signUp\",\r\n      changePoint:1000\r\n    });\r\n}\r\n\r\nexport async function alreadySignup(result) {\r\n  firebase\r\n    .database()\r\n    .ref('users/' + result.user.uid)\r\n    .update({\r\n      last_logged_in: Date.now()\r\n    });\r\n}"]},"metadata":{},"sourceType":"module"}