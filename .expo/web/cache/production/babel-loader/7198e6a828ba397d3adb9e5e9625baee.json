{"ast":null,"code":"import _slicedToArray from\"@babel/runtime/helpers/slicedToArray\";import _objectWithoutProperties from\"@babel/runtime/helpers/objectWithoutProperties\";var _excluded=[\"children\"];function _extends(){_extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key];}}}return target;};return _extends.apply(this,arguments);}import React,{useEffect,useRef,useState}from\"react\";import ToastContext from\"./context\";import Toast from\"../toast-container\";var ToastProvider=function ToastProvider(_ref){var children=_ref.children,props=_objectWithoutProperties(_ref,_excluded);var toastRef=useRef(null);var _useState=useState({}),_useState2=_slicedToArray(_useState,2),refState=_useState2[0],setRefState=_useState2[1];useEffect(function(){setRefState(toastRef.current);},[]);return React.createElement(ToastContext.Provider,{value:refState},children,React.createElement(Toast,_extends({ref:toastRef},props)));};export default ToastProvider;","map":{"version":3,"sources":["provider.tsx"],"names":["ToastProvider","props","toastRef","useRef","useState","useEffect","setRefState","refState"],"mappings":"wcAAA,MAAA,CAAA,KAAA,EAAA,SAAA,CAAA,MAAA,CAAA,QAAA,KAAA,OAAA,CACA,MAAA,CAAA,YAAA,iBACA,MAAA,CAAA,KAAA,0BAEA,GAAMA,CAAAA,aAAwB,CAAG,QAA3BA,CAAAA,aAA2B,MAA4B,IAA3B,CAAA,QAA2B,MAA3B,QAA2B,CAAZC,KAAY,0CAC3D,GAAMC,CAAAA,QAAQ,CAAGC,MAAM,CAAvB,IAAuB,CAAvB,CACA,cAAgCC,QAAQ,CAAxC,EAAwC,CAAxC,wCAAM,QAAN,eAAM,WAAN,eAEAC,SAAS,CAAC,UAAM,CACdC,WAAW,CAACJ,QAAQ,CAApBI,OAAW,CAAXA,CADO,CAAA,CAATD,EAAS,CAATA,CAIA,MACE,CAAA,KAAA,CAAA,aAAA,CAAC,YAAD,CAAA,QAAA,CAAA,CAAuB,KAAK,CAAEE,QAA9B,CAAA,CAAA,QAAA,CAEE,KAAA,CAAA,aAAA,CAAA,KAAA,CAAA,QAAA,CAAA,CAAO,GAAG,CAAEL,QAAZ,CAAA,CAHJ,KAGI,CAAA,CAFF,CADF,CARF,CAAA,CAgBA,cAAA,CAAA,aAAA","sourcesContent":["import React, { FC, useEffect, useRef, useState } from \"react\";\r\nimport ToastContext from \"./context\";\r\nimport Toast, { Props } from \"../toast-container\";\r\n\r\nconst ToastProvider: FC<Props> = ({ children, ...props }) => {\r\n  const toastRef = useRef(null);\r\n  const [refState, setRefState] = useState({});\r\n\r\n  useEffect(() => {\r\n    setRefState(toastRef.current as any);\r\n  }, []);\r\n\r\n  return (\r\n    <ToastContext.Provider value={refState as any}>\r\n      {children}\r\n      <Toast ref={toastRef} {...props} />\r\n    </ToastContext.Provider>\r\n  );\r\n};\r\n\r\nexport default ToastProvider;\r\n"]},"metadata":{},"sourceType":"module"}