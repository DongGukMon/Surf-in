{"ast":null,"code":"import _defineProperty from\"@babel/runtime/helpers/defineProperty\";function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);if(enumerableOnly){symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable;});}keys.push.apply(keys,symbols);}return keys;}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=arguments[i]!=null?arguments[i]:{};if(i%2){ownKeys(Object(source),true).forEach(function(key){_defineProperty(target,key,source[key]);});}else if(Object.getOwnPropertyDescriptors){Object.defineProperties(target,Object.getOwnPropertyDescriptors(source));}else{ownKeys(Object(source)).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key));});}}return target;}import React,{useState,useEffect,useContext}from'react';import ActivityIndicator from\"react-native-web/dist/exports/ActivityIndicator\";import Button from\"react-native-web/dist/exports/Button\";import Text from\"react-native-web/dist/exports/Text\";import View from\"react-native-web/dist/exports/View\";import ScrollView from\"react-native-web/dist/exports/ScrollView\";import TouchableOpacity from\"react-native-web/dist/exports/TouchableOpacity\";import SafeAreaView from\"react-native-web/dist/exports/SafeAreaView\";import{Ionicons}from'@expo/vector-icons';import firebaseInit from\"../../src/firebaseInit\";import firebase from'firebase';import*as Notifications from'expo-notifications';import{orderContext}from\"../../navigators/StackContext\";firebaseInit();function OrderList(_ref){var navigation=_ref.navigation;var _useContext=useContext(orderContext),orderData=_useContext.orderData,setOrderData=_useContext.setOrderData;var fullData=orderData.fullData;var listBox=[];useEffect(function(){firebase.database().ref(\"master\").on('value',function(snapshot){if(snapshot.val()){var data=Object.values(snapshot.val());setOrderData(_objectSpread(_objectSpread({},orderData),{},{fullData:data}));}});},[]);return React.createElement(View,{style:{flex:1}},React.createElement(SafeAreaView,null,React.createElement(ScrollView,{style:{padding:30}},fullData?fullData.map(function(item,index){return React.createElement(TouchableOpacity,{style:{backgroundColor:'white',height:150,borderRadius:30,borderColor:'black',borderWidth:3,justifyContent:'center',alignItems:'center'},onPress:function onPress(){setOrderData(_objectSpread(_objectSpread({},orderData),{},{selectData:item}));navigation.navigate(\"OrderScreen\");},key:index},React.createElement(Text,null,item[\"title\"]));}):React.createElement(ActivityIndicator,null))));}export default OrderList;","map":{"version":3,"sources":["C:/Users/Note/Desktop/surfin/screen/OrderFolder/OrderList.js"],"names":["React","useState","useEffect","useContext","Ionicons","firebaseInit","firebase","Notifications","orderContext","OrderList","navigation","orderData","setOrderData","fullData","listBox","database","ref","on","snapshot","val","data","Object","values","flex","padding","map","item","index","backgroundColor","height","borderRadius","borderColor","borderWidth","justifyContent","alignItems","selectData","navigate"],"mappings":"i2BAAA,MAAOA,CAAAA,KAAP,EAAeC,QAAf,CAAyBC,SAAzB,CAAoCC,UAApC,KAAqD,OAArD,C,qcAEA,OAAQC,QAAR,KAAuB,oBAAvB,CACA,MAAOC,CAAAA,YAAP,8BACA,MAAOC,CAAAA,QAAP,KAAqB,UAArB,CACA,MAAO,GAAKC,CAAAA,aAAZ,KAA+B,oBAA/B,CACA,OAAQC,YAAR,qCAEAH,YAAY,GAGZ,QAASI,CAAAA,SAAT,MAAiC,IAAbC,CAAAA,UAAa,MAAbA,UAAa,CAE/B,gBAAkCP,UAAU,CAACK,YAAD,CAA5C,CAAOG,SAAP,aAAOA,SAAP,CAAkBC,YAAlB,aAAkBA,YAAlB,CACA,GAAOC,CAAAA,QAAP,CAAmBF,SAAnB,CAAOE,QAAP,CACA,GAAMC,CAAAA,OAAO,CAAC,EAAd,CAGAZ,SAAS,CAAC,UAAM,CACdI,QAAQ,CAACS,QAAT,GAAoBC,GAApB,CAAwB,QAAxB,EACCC,EADD,CACI,OADJ,CACa,SAACC,QAAD,CAAc,CACzB,GAAGA,QAAQ,CAACC,GAAT,EAAH,CAAkB,CAChB,GAAMC,CAAAA,IAAI,CAAGC,MAAM,CAACC,MAAP,CAAcJ,QAAQ,CAACC,GAAT,EAAd,CAAb,CACAP,YAAY,gCAAKD,SAAL,MAAgBE,QAAQ,CAAEO,IAA1B,GAAZ,CACC,CACF,CANH,EAQD,CATQ,CASP,EATO,CAAT,CAWA,MACE,qBAAC,IAAD,EAAM,KAAK,CAAE,CAACG,IAAI,CAAC,CAAN,CAAb,EACE,oBAAC,YAAD,MACE,oBAAC,UAAD,EAAY,KAAK,CAAE,CAACC,OAAO,CAAE,EAAV,CAAnB,EACGX,QAAQ,CAAGA,QAAQ,CAACY,GAAT,CAAa,SAACC,IAAD,CAAOC,KAAP,CAAe,CAEtC,MACA,qBAAC,gBAAD,EAAkB,KAAK,CAAE,CAACC,eAAe,CAAE,OAAlB,CAA2BC,MAAM,CAAE,GAAnC,CAAwCC,YAAY,CAAE,EAAtD,CAA0DC,WAAW,CAAE,OAAvE,CAAgFC,WAAW,CAAC,CAA5F,CAA8FC,cAAc,CAAE,QAA9G,CAAwHC,UAAU,CAAE,QAApI,CAAzB,CACI,OAAO,CAAE,kBAAM,CACbtB,YAAY,gCAAKD,SAAL,MAAgBwB,UAAU,CAAET,IAA5B,GAAZ,CACAhB,UAAU,CAAC0B,QAAX,CAAoB,aAApB,EAAmC,CAHzC,CAG2C,GAAG,CAAET,KAHhD,EAIE,oBAAC,IAAD,MAAQD,IAAI,CAAC,OAAD,CAAZ,CAJF,CADA,CAQD,CAVW,CAAH,CAUJ,oBAAC,iBAAD,MAXP,CADF,CADF,CADF,CAmBD,CAED,cAAejB,CAAAA,SAAf","sourcesContent":["import React, {useState, useEffect, useContext} from 'react';\r\nimport { ActivityIndicator, Button, Text, View, ScrollView, TouchableOpacity,SafeAreaView } from 'react-native';\r\nimport {Ionicons} from '@expo/vector-icons';\r\nimport firebaseInit from '../../src/firebaseInit';\r\nimport firebase from 'firebase';\r\nimport * as Notifications from 'expo-notifications';\r\nimport {orderContext} from '../../navigators/StackContext';\r\n\r\nfirebaseInit()\r\n\r\n\r\nfunction OrderList({navigation}) {\r\n\r\n  const {orderData, setOrderData} = useContext(orderContext);\r\n  const {fullData} = orderData;\r\n  const listBox=[];\r\n\r\n\r\n  useEffect(() => {\r\n    firebase.database().ref(\"master\")\r\n    .on('value', (snapshot) => {\r\n      if(snapshot.val()){\r\n        const data = Object.values(snapshot.val())\r\n        setOrderData({...orderData, fullData: data}) \r\n        } \r\n      } \r\n    )\r\n  },[])\r\n\r\n  return (\r\n    <View style={{flex:1 }}>\r\n      <SafeAreaView>\r\n        <ScrollView style={{padding: 30}}>\r\n          {fullData ? fullData.map((item, index)=>{\r\n            \r\n            return (\r\n            <TouchableOpacity style={{backgroundColor: 'white', height: 150, borderRadius: 30, borderColor: 'black', borderWidth:3,justifyContent: 'center', alignItems: 'center'  }} \r\n                onPress={() => {\r\n                  setOrderData({...orderData, selectData: item})\r\n                  navigation.navigate(\"OrderScreen\")}} key={index}>\r\n              <Text >{item[\"title\"]}</Text>\r\n            </TouchableOpacity>\r\n            )\r\n          }) : <ActivityIndicator/>}\r\n        </ScrollView>\r\n      </SafeAreaView>\r\n    </View>\r\n  );\r\n}\r\n\r\nexport default OrderList;"]},"metadata":{},"sourceType":"module"}